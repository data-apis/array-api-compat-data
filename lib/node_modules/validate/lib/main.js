/**
* @license MIT
*
* Copyright (c) 2023 Consortium for Python Data API Standards.
*
* Permission is hereby granted, free of charge, to any person obtaining a copy
* of this software and associated documentation files (the "Software"), to deal
* in the Software without restriction, including without limitation the rights
* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
* copies of the Software, and to permit persons to whom the Software is
* furnished to do so, subject to the following conditions:
*
* The above copyright notice and this permission notice shall be included in all
* copies or substantial portions of the Software.
*
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
* AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
* LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
* OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
* SOFTWARE.
*/

'use strict';

// MODULES //

var Ajv = require( 'ajv' );
var schema = require( 'schema' );


// FUNCTIONS //

/**
* Returns a function to validate Array API compatibility data.
*
* @private
* @returns {Function} validation function
*
* @example
* var isValid = validator();
* // returns <Function>
*/
function validator() {
	var opts;
	var ajv;

	opts = {
		// Collect all errors:
		'allErrors': true,

		// Include the schema reference and invalid data in error output:
		'verbose': true,

		// Validate in strict mode:
		'strict': true
	};

	// Create a new `Ajv` instance and compile the schema:
	ajv = new Ajv( opts );
	return ajv.compile( schema() );
}


// MAIN //

/**
* Tests whether a provided object is a valid Array API compatibility data object.
*
* @name isValid
* @type {Function}
* @param {Object} data - input object
* @returns {boolean} boolean indicating whether the input object is valid
*
* @example
* var bool = isValid( {} );
* // returns <boolean>
*/
var isValid = validator();


// EXPORTS //

module.exports = isValid;
